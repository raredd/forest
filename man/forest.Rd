% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{forest}
\alias{forest}
\alias{plot.forest}
\title{Forest plot}
\usage{
forest(x, ..., header = FALSE, total = NULL, plotArgs = list(), plot = TRUE)

\method{plot}{forest}(
  x,
  panel_size = c(1, 1.5, 0.8),
  col.rows,
  at.text = NULL,
  left_panel = NULL,
  center_panel = NULL,
  header = FALSE,
  type = c("ci", "box", "tplot"),
  show_percent = TRUE,
  show_columns = TRUE,
  names = NULL,
  show_conf = FALSE,
  labels = NULL,
  xlim = NULL,
  axes = TRUE,
  logx = FALSE,
  inner.mar = c(0, 0, 0, 0),
  reset_par = TRUE,
  layout = c("split", "unified"),
  ...
)
}
\arguments{
\item{x}{an object returned by \code{\link{prepare_forest}} or an object
of a supported class}

\item{...}{additional arguments passed to other methods or graphical
parameters passed to \code{\link{par}}}

\item{header}{logical or a vector of character strings used as labels for
each variable in the model}

\item{total}{optional argument to give total number of observations, useful
for models which have already removed missing observations; by default,
the percentages will be relative to fitted models rather than total
observations; see examples}

\item{plotArgs}{a named list of additional arguments passed to
\code{plot.forest}}

\item{plot}{logical; if \code{TRUE}, a forest plot is generated; otherwise,
a list of data to plot is returned (see \code{plot.forest})}

\item{panel_size}{proportional size of \code{c(left, middle, right)} panels}

\item{col.rows}{optional vector of colors for each row}

\item{at.text}{optional x-axis locations for the text columns in normalized
device coordinates; see \code{\link{grconvertX}}}

\item{left_panel}{(dev) a \code{emph} named list of additional text columns
added to the left panel}

\item{center_panel}{(dev) optional function used to draw the plot}

\item{type}{type of plot for middle panel (currently only \code{"point"}) is
supported}

\item{show_percent}{logical; if \code{TRUE}, percents are shown for each row}

\item{show_columns}{logical or a vector of logicals for each text column}

\item{names}{optional vector of length 4 giving the labels for each column}

\item{show_conf}{logical; if \code{TRUE}, the confidence interval is show
with the estimate}

\item{labels}{optional vector of labels for each row term}

\item{xlim}{the x-axis limits of the plot}

\item{axes}{logical; if \code{TRUE}, the x-axis is plotted (default); to
show a custom axis, set \code{reset_par = FALSE} and use \code{\link{axis}}}

\item{logx}{logical; if \code{TRUE}, the x-axis will be logarithmic}

\item{inner.mar}{margins for the plot panel}

\item{reset_par}{logical; if \code{TRUE}, the graphical parameters are
reset to their state before the function call; use \code{FALSE} to
continue adding to the middle panel figure}

\item{layout}{layout of figure, either \code{"split"} where plot splits
the text columns or \code{"unified"} where the text columns are adjacent}
}
\description{
A forest plot.
}
\examples{
library('survival')
lung2 <- within(lung, {
  sex <- factor(sex, 1:2, c('Male', 'Female'))
  ph.ecog <- factor(ph.ecog, 0:2)
  age2 <- replace(age, sample(length(age), 50), NA)
})

x <- coxph(Surv(time, status) ~ age + sex + ph.ecog +
             I(meal.cal > 325.5) +
             I(wt.loss < 9.5) +
             I(ph.karno > 85) +
             I(pat.karno > 65), lung2)
             
x <- forest(x, plot = FALSE)
plot(x, show_conf = TRUE)

## change the color palette
palette(c('grey70', 'green4'))
plot(x, show_conf = TRUE, cex = 3)
palette('default')


## add extra columns to left panel
plot(
  x, show_conf = TRUE, panel_size = c(1.5, 1.5, 1), layout = 'unified',
  left_panel = list(HR = x$cleanfp_list$numeric$`exp(coef)`)
)

plot(
  x, show_conf = TRUE, panel_size = c(2, 1.5, 1), layout = 'unified',
  left_panel = list(
    HR = x$cleanfp_list$numeric$`exp(coef)`,
    ' ' = ifelse(x$cleanfp_list$numeric$p.value < 0.05, '*', '')
  )
)


## use a custom denominator for percents, eg, if the model sample size
## excludes NAs or missing data
x <- coxph(Surv(time, status) ~ age2 + sex + ph.ecog, lung2)
forest(x, total = nrow(lung2))
## compare
forest(x)


## equivalent ways to make forest plot
x <- coxph(Surv(time, status) ~ age + sex + ph.ecog, lung2)
clean <- cleanfp(x)
clean_ref <- add_reference(clean)
prep_list <- prepare_forest(clean_ref)
plot(prep_list)

## or
forest(x, header = c('Age in years', 'Sex', 'ECOG PS'))


## plot.forest gives more options
plot(
  prep_list,
  xlim = c(0, 2),
  center_panel = {
    panel_box(replicate(6, runif(20, 0, 2), simplify = FALSE))
    axis(1, mgp = c(3, 2, 1))
  }
)

\dontrun{
library('rawr') ## for tplot
hr_ci <- prep_list$cleanfp_list$numeric[1:3]
plot(
  prep_list,
  xlim = c(0, 4),
  center_panel = {
    panel_tplot(rev(asplit(hr_ci, 1)), type = 'd', cex = 3,
                pch = c(16, 1, 1), group.pch = FALSE,
                col = c(1, 2, 2), group.col = FALSE)
    axis(1, mgp = c(3, 2, 1))
  }
)
}


## use forest(..., plot = FALSE) to run steps except plotting which
## can then be customized with plot.forest
fp <- forest(glm(vs ~ factor(gear) + wt + hp, mtcars,
                 family = 'binomial'),
             plot = FALSE)
plot(fp, labels = c(paste('Gear -', 3:5), 'Weight (1k lbs)', 'Horse Power'))


## multiple models on the same plot
cx1 <- coxph(Surv(time, status) ~ age + sex + ph.ecog, lung2)
cx2 <- coxph(Surv(time, status) ~ age + sex, lung2)
cx3 <- coxph(Surv(time, status) ~ age, lung2)

models <- list(cx1, cx2, cx3)
prep_lists <- lapply(models, forest, plot = FALSE)
prep_lists <- lapply(prep_lists, function(x)
  `class<-`(x[[1L]], 'cleanfp_list'))
x <- Reduce(merge_forest, prep_lists)

group.col <- rep_len(c('grey95', 'none'), length(models))
group.col <- rep(group.col, sapply(prep_lists, function(x) length(x$Term)))
plot(x, col.rows = group.col, reset_par = FALSE)
rl <- rev(rle(group.col)$lengths)
text(grconvertX(0.025, 'ndc'), rev(cumsum(head(c(0, rl), -1)) + rl / 2) + 0.5,
     paste('Model', 1:3), xpd = NA, srt = 90, adj = 0)


## other supported objects

## competing risks regressions
library('cmprsk')
x <- with(transplant,
  crr(futime, as.integer(event) - 1,
      cov1 = cbind(age, model.matrix(~ sex + abo)[, -1, drop = FALSE])))
forest(x, ~ age + sex + abo, transplant)

library('cmprsk2')
x <- crr2(Surv(futime, event(censored) == death) ~ age + sex + abo, transplant)
forest(x)


## cox models
dat <- within(na.omit(transplant), {
  event_ind <- +(event == 'death')
  futime <- futime + 1e-8
})

## survival::coxph model
x <- coxph(Surv(futime, event_ind) ~ age + sex + abo, dat)
x <- forest(x, plot = FALSE)
plot(x, show_conf = TRUE, xlim = c(0, 5))


## coxphf::coxphf model
library('coxphf')
x <- coxphf(Surv(futime, event_ind) ~ age + sex + abo, dat)
forest(x, data = dat)


## logistf::logistf model
library('logistf')
x <- logistf(event_ind ~ age + sex + abo, dat)
forest(x, data = dat)


## odds ratios/fisher tests
dat <- data.frame(
  group = c('tx', 'pbo'),
  mut = replicate(10, sample(0:1, 50, replace = TRUE))
)
names(dat)[-1] <- paste0('gene', 1:10)

forest(
  group ~ ., dat,
  plotArgs = list(xlim = c(0, 20), show_conf = TRUE, cex = 1)
)

}
